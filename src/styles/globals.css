@import "tailwindcss";

@variant dark (&:is(.dark *));

@theme {
  --breakpoint-*: initial;
  --breakpoint-xs: 356px;
  --breakpoint-sm: 400px;
  --breakpoint-smd: 532px;
  --breakpoint-md: 768px;
  --breakpoint-lg: 1024px;
  --breakpoint-xl: 1280px;
  --breakpoint-2xl: 1536px;
  --breakpoint-3xl: 1920px;

  --color-background: #0f0f0f;
  --color-foreground: #f3f3f3;

  --color-brand-100: #eff3a3;
  --color-brand-200: #dee281;
  --color-brand-300: #dbdf90;
  --color-brand-400: #e5e999;
  --color-brand-500: #707100;
  --color-brand-600: #5a5b00;
  --color-brand-700: #494a00;
  --color-brand-800: #3c3c00;
  --color-brand-900: #303100;
  --color-brand-1000: #262605;
  --color-brand-1100: #18190d;
  --color-brand-1200: #111209;

  --animate-load: load 1.2s linear infinite;

  @keyframes load {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 0.15;
    }
  }
}

@utility container {
  margin-inline: auto;
  padding-inline: 1rem;
  @media (width >= theme(--breakpoint-xs)) {
    max-width: none;
  }
  @media (width >= 1536px) {
    max-width: 1536px;
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@plugin "tailwindcss-animate";

html {
  scrollbar-width: thin;
  scrollbar-color: #666 transparent;
}

/* Hide scrollbar for Chrome, Safari and Opera */
.remove-system-scrollbar::-webkit-scrollbar {
  display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
.remove-system-scrollbar {
  -ms-overflow-style: none;
  /* IE and Edge */
  scrollbar-width: none;
  /* Firefox */
}

h1.rte {
  font-size: 1.25rem;
  line-height: 2rem;
  font-weight: bold;
  padding: 4px 0 1px;
}

h2.rte {
  font-size: 1rem;
  line-height: 1.75rem;
  font-weight: bold;
  padding: 3px 0 1px;
}

@media (width >= 532px) {
  h1.rte {
    font-size: 1.5rem;
    line-height: 2.25rem;
    font-weight: bold;
    padding: 5px 0 1px;
  }

  h2.rte {
    font-size: 1.125rem;
    line-height: 2rem;
    font-weight: bold;
    padding: 4px 0 1px;
  }
}

.tiptap .is-editor-empty:first-child::before {
  color: #777777;
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

.tiptap ul[data-type="taskList"] {
  list-style: none;
  margin-left: 0;
  padding: 2px 8px;
}

.tiptap ul[data-type="taskList"] li {
  align-items: center;
  display: flex;
}

.tiptap ul[data-type="taskList"] li > label {
  flex: 0 0 auto;
  margin-right: 0.6rem;
  user-select: none;
}

.tiptap ul[data-type="taskList"] li > div {
  flex: 1 1 auto;
}

.tiptap ul[data-type="taskList"] input[type="checkbox"] {
  cursor: pointer;
}

.tiptap ul[data-type="taskList"] ul[data-type="taskList"] {
  margin: 0;
}

.tiptap ul[data-type="taskList"] li input[type="checkbox"] {
  -webkit-appearance: none;
  appearance: none;
  width: 16px;
  height: 16px;
  border: 1px solid #aaaaaa;
  background: transparent;
  border-radius: 2px;
  transform: translateY(-1px);
  cursor: pointer;
  position: relative;
}

.tiptap ul[data-type="taskList"] li input[type="checkbox"]:checked {
  background: #e5e999;
  border: 1px solid #e5e999;
}

.tiptap ul[data-type="taskList"] li input[type="checkbox"]:checked::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 10px;
  border: solid black;
  border-width: 0 2px 2px 0;
  transform: translate(-50%, -50%) rotate(45deg);
}
